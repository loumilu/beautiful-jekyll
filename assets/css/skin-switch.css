#change-skin {
    position: absolute;
    cursor: pointer;
    display: inline-block;
    border: 1px solid #ccc;
    background: #fff;
    border-radius: 1rem;
    font-size: 0.8125rem;
    padding: 0.0625rem;
    -webkit-transition: background 0.3s ease-in-out;
    -moz-transition: background 0.3s ease-in-out;
    transition: background 0.3s ease-in-out;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
  }
  @media (min-width: 1200px) {
    .navbar .navbar-collapse {
      margin-right: 2.3rem;
    }
    #change-skin {
      top: auto;
      right: 1rem;
    }
  }
  @media (max-width: 1199px) {
    #change-skin {
      top: 0.85rem;
      right: 5rem;
    }
  }
  #change-skin .skin-btn {
    -webkit-transition: margin 0.3s ease-in-out;
    -moz-transition: margin 0.3s ease-in-out;
    transition: margin 0.3s ease-in-out;
    margin: 0 0.8rem 0 0;
  }
  #change-skin:hover .skin-btn {
    margin: 0 0 0 0.8rem;
  }
  #change-skin .dark-mode {
    display: none;
  }
  .page-dark-mode #change-skin {
    background: #242526;
    border-color: #444;
  }
  .page-dark-mode #change-skin .dark-mode {
    display: block;
  }
  .page-dark-mode #change-skin .light-mode {
    display: none;
  }
  #change-skin:hover {
    background: #888;
  }

  
  
  /* Below is a copy of the dark mode CSS, all rules prepended with the dark mode switch */
  
  .page-dark-mode {
    --tw-bg-opacity: 1;
    --text-col: rgb(209, 213, 219);;
    --page-col: rgb(38 38 38);
    --link-col: rgb(17, 143, 202);
    --hover-col: rgb(157, 155, 155);
    --navbar-col: rgb(38 38 38 / var(--tw-bg-opacity));
    --navbar-text-col: #e4e6eb;
    --navbar-border-col: #393a3b;
    --footer-col: rgb(38 38 38 / var(--tw-bg-opacity));
    --footer-text-col: #AAAAAA;
    --footer-link-col: #DFDFDF;
    --footer-hover-col: rgb(157, 155, 155);
    --mid-col: #999999;
  }
  
  .page-dark-mode table tr {
    border-top-color: #666;
  }
  .page-dark-mode table tr:nth-child(2n) {
    background-color: #28292a;
  }
  .page-dark-mode table tr th,
  .page-dark-mode table tr td {
    border-color: #666;
  }
  .page-dark-mode .jumbotron {
    background: #242526;
  }
  .page-dark-mode .blog-post blockquote {
    border-left-color: #444;
  }
  .page-dark-mode .post-preview {
    border-bottom-color: #444;
  }
  .page-dark-mode a.btn {
    color: #fff;
  }
  .page-dark-mode .header-section.has-img .no-img {
    background-color: #111;
    box-shadow: 0 0 0.3125rem #888;
  }
  .page-dark-mode .box-note,
  .page-dark-mode .box-warning,
  .page-dark-mode .box-error,
  .page-dark-mode .box-success {
    color: #404040;
  }

  .page-dark-mode .blog-tags .list-inline-item {
    background-color: #333533;
    border-radius: 7%;
  }
  .page-dark-mode .blog-post .caption {
    color: #aaa;
  }
  .page-dark-mode code {
    color: #e4e6eb;
    background-color: #282c34;
  }
  
  .page-dark-mode .highlight > pre {
   background-color: #282c34;
  }
  .page-dark-mode pre {
    border-color: var(--navbar-border-col);
    color: var(--footer-link-col);
  }
  .page-dark-mode pre code {
    color: inherit;
  }
  .page-dark-mode .highlight pre.lineno {
    color: #7e5af2
  }

  .prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-kbd: #111827;
    --tw-prose-kbd-shadows: 17 24 39;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height:1.75
}
  
  code, kbd, samp, pre {
    font-family: Source Code Pro Variable, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size:1em;
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size:.875em;
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)):before {
    content: "`";
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)):after {
    content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size:.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size:.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: .875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: .375rem;
    padding-top: .8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: .8571429em;
    padding-inline-start: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)):before {
    content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)):after {
    content: none;
}

.prose-code\:font-mono :is(:where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))) {
    font-family: Source Code Pro Variable, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
}

.prose-code\:text-sm :is(:where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))) {
    font-size: .875rem;
    line-height: 1.25rem;
}

.prose-code\:before\:content-\[\] :is(:where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))):before {
    content: var(--tw-content);
}

.prose-code\:after\:content-\[\] :is(:where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))):after {
    content: var(--tw-content);
}

.prose-pre\:p-0 :is(:where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *))) {
    padding: 0;
}

